・共通化
問題1-1から問題1-3まで部分文字列を切り出す処理は関数maxSubstrWithCondを使用するよう共通化している。
本課題では設問のプログラムごとに独立して実行できるよう、同処理をそれぞれのソースファイルに記述したが、
実際のアプリケーション開発ではユーティリティクラスにまとめる等して、アプリケーション上から共通して呼び出せるようにする。

・拡張性
共通関数maxSubstrWithCondでは第１引数に対象文字列、第２引数に文字列の連続性を判定するBiPredicateインターフェース
のインスタンスを取るようにした。連続性判定処理を引数に取ることで、仮に別の条件で部分文字列を取得したい場合でも使用する側
で条件を指定することが可能となるため共通関数maxSubstrWithCond自体の変更は不要となる。
また、BiPredicateインターフェースは関数型インターフェースであるためラムダ式での記述が可能となり、より簡潔な記述が可能となる。
